@model GraniteHouse.Models.ViewModels.ProductsViewModel
@using GraniteHouse.Extensions

@{
    ViewData["Title"] = "Edit";
}

<br /><br />

<h2 class="text-info">Edit Product</h2>
<br />
<form method="post" enctype="multipart/form-data">
    <div class="p-4 border rounded row">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input asp-for="Products.Id" type="hidden" />
        <div class="col-8">
            <div class="form-group row">
                <div class="col-3">
                    <label asp-for="Products.Name"></label>
                </div>
                <div class="col-9">
                    <input asp-for="Products.Name" class="form-control" />
                </div>
                <span asp-validation-for="Products.Name" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-3">
                    <label asp-for="Products.Price"></label>
                </div>
                <div class="col-9">
                    <input asp-for="Products.Price" class="form-control" />
                </div>
                <span asp-validation-for="Products.Price" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-3">
                    <label asp-for="Products.Image"></label>
                </div>
                <div class="col-9">
                    @*<div class="input-group">
                    <input type="file" class="custom-file-input" name="files">
                    <label class="custom-file-label"></label>
                </div>*@

                    <input type="file" name="files" />
                </div>
            </div>
            <div class="form-group row">
                <div class="col-3">
                    <label asp-for="ProductTypes"></label>
                </div>
                <div class="col-9">
                    <select asp-for="@Model.Products.ProductTypeId"
                            asp-items="Model.ProductTypes.ToSelectListItem(Model.Products.ProductTypeId)"
                            class="form-control"></select>
                </div>

            </div>
            <div class="form-group row">
                <div class="col-3">
                    <label asp-for="SpecialTags"></label>
                </div>
                <div class="col-9">
                    <select asp-for="@Model.Products.SpecialTagsId"
                            asp-items="Model.SpecialTags.ToSelectListItem(Model.Products.SpecialTagsId)"
                            class="form-control"></select>
                </div>

            </div>
            <div class="form-group row">
                <div class="col-3">
                    <label asp-for="Products.ShadeColor"></label>
                </div>
                <div class="col-9">
                    <input asp-for="Products.ShadeColor" class="form-control" />
                </div>
                <span asp-validation-for="Products.ShadeColor" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-3">
                    <label asp-for="Products.Available"></label>
                </div>
                <div class="col-9">
                    <input type="checkbox" asp-for="Products.Available" />
                </div>
            </div>
        </div>
        
        <div class="col-1"></div>
        <div class="col-3 justify-content-center align-items-center">
            <img src="@Model.Products.Image" style="width:100%; border-radius: 5px; border: 1px solid #bbb9b9;" />
        </div>

        <div class="form-group">
            <input type="submit" class="btn btn-primary" value="Update" />
            <a asp-action="Index" class="btn btn-success">Back To List</a>
        </div>
    </div>
</form>

@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

